#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup

#+Author: Nishchay Karle, Obi Obetta, Matt Teichman
#+Title: Attachment Converter Workshop, iPres 2023

#+OPTIONS: toc:nil num:nil tags:nil email:off ^:{} ':t
#+LATEX_CLASS: article
#+LATEX_HEADER: \usepackage[margin=1.1in]{geometry}
#+LATEX_HEADER: \usepackage[hang]{footmisc}
#+LATEX_HEADER: \setlength{\parindent}{0pt}
#+LATEX_HEADER: \setlength{\parskip}{1.8ex plus 0.25ex minus 0.25ex}
#+LATEX_HEADER: \setlength{\headsep}{2.5em}
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \setstretch{1.1}

Welcome to the Attachment Converter Workshop at iPres 2023!  In this
session, we'll walk you through our new open source application,
Attachment Converter, which batch-converts all attachments in an email
mailbox to preservation formats.

There are two ways to participate in this workshop.  If you're feeling
tech-savvy, we would encourage you to install the required software in
advance of the workshop and type along with us as we walk through some
illustrative examples of the email format.  If you aren't feeling
tech-savvy, you should be able to just watch and follow along.  Either
way, we are really looking forward to engaging with your questions and
comments as we show you how to use our new tool.  If you aren't sure
how tech-savvy you're feeling, the question to ask is whether you're
comfortable opening the Terminal application on your computer and
working at the command prompt.

In the next section, we'll go through how to install the software
you'll need if you want to participate in the workshop by typing along
on your own machines.  If you're planning to simply attend, watch,
listen, and ask questions, please feel free to skip the [[advance][Advance
Preparation]] section---you won't need to set anything up on your
computer in advance of the workshop.

* Advance Preparation <<advance>>

If you're planning to type along with us on your computer during the
workshop, then this is the section for you!

The software you'll need to install for the workshop is slightly
different, depending on whether you're working in Windows or macOS.
Either way, you will need to have privileges on your machine that
allow you to install software, so if you're attending this conference
from a work machine, that might be something worth looking into with
your system administrator.

** macOS

If you're on a Mac, you'll need to open a Terminal, then install an
open-source package manager, the =git= version control system, the [[https://www.gnu.org/software/make/][GNU
Make]] build tool, and the =libpst= package.  We'll go through those
steps next, but if you're on Windows, please skip to the section
entitled [[windows][Windows (Debian WSL)]].

Remember: to follow these instructions, you'll need to have the
ability to install software on your machine, so if you don't, you may
want to reach out to your system administrator to see whether they can
grant you the right privileges.

*** Install Homebrew

There are various options for open source package managers on macOS,
but we recommend using [[https://brew.sh][Homebrew]].  If you've never used it
before, you'll first need to install XCode Command Line Tools, which
you can do by running this command in your Terminal:

#+begin_example
  $ xcode-select --install
#+end_example

Then you can install Homebrew by following the instructions here:

https://brew.sh/

Or, equivalently, by typing this command:

#+LATEX: \footnotesize

#+begin_example
  $ /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
#+end_example

#+LATEX: \normalsize

*** Install Version Control Software

Now that you've installed Homebrew, the next step is to install Git,
which is what we will use to download the source code for the project
and compile it into an executable that you can run.  To do so, run
this command:

#+begin_example
  $ brew install git
#+end_example

*** Install Libpst

The last thing we'll ask you to install is Libpst, the software we
will use to convert from Outlook =.pst= to MBOX format during the
workshop.  To install that, run:

#+begin_example
  $ brew install libpst
#+end_example

Once you've reached this point on your Mac, you can skip the next
section---which is our Windows-specific setup instructions---and
proceed straight to the section called [[compile][Compile Attachment Converter]].

** Windows (Debian WSL) <<windows>>

Attachment Converter is a UNIX application, which means that in order
to run it on Windows, you'll need to install the [[https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux][Windows Subsystem for
Linux]].  We chose Debian as a Linux distribution for this purpose,
because Debian has full out-of-the-box support for OCaml, the
programming language that Attachment Converter was written in.

So first, you'll install the Debian WSL.  Once that's set up, you'll
open up a Debian WSL Terminal and do everything else from inside that
Terminal, including installing a few more utilities, as well as
running Attachment Converter itself.

Note that you need to have privileges to install software on your
machine to follow these instructions.  If you don't, check with your
system administrator about how to get them.

*** Set up the Debian WSL

First, open up the Microsoft Store application using your Start Menu.
When it opens, there should be a search box at the top of the window
that says something like: "Search apps, games, movies and more".  Type
"Debian" in the search box and hit Enter.  A list of search results
will then come up, and the one you want is called Debian.
Double-click on that, and click through the installation buttons,
prompts, etc. that come up.  During the installation process, you will
be asked to choose a username and password for your Linux subsystem.
Make sure to write those credentials down and keep them available for
reference! You may need to reboot your Windows machine after you
finish.

Once you've rebooted and logged back in, you should be able to open a
Debian WSL Terminal by running an application called "Debian" from
your Start Menu.  It will ask you to log in using the username and
password you chose during the installation process.

*** Install Version Control Software

Now that your UNIX environment is set up, the next step is to install
version control software, which in this case is Git.  To do that, run
this command:

#+begin_example
  $ sudo apt install git
#+end_example

This is the utility we will use to get the latest version of the
source code for Attachment Converter, later in these setup
instructions.

*** Install GNU Make

The software we're going to use to compile Attachment Converter is
called Make.  To install it, run this command:

#+begin_example
  $ sudo apt install make
#+end_example

*** Install Libpst

Finally, we're going to ask you to install Libpst, which is a freely
available utility for converting Outlook =.pst= files to MBOX
format---the email mailbox format that Attachment Converter uses.

Once you've reached this point on your Windows machine, you're ready
to go to the next section, in which we show you how to compile
Attachment Converter into an executable that you can run.

** Compile Attachment Converter <<compile>>

Now that you're set up with the basic software you need, whether
you're on Windows or a Mac, the next step is to download the source
code for Attachment Converter, compile it into an executable you can
run, and put the executable in a location where your Terminal can see
it.
